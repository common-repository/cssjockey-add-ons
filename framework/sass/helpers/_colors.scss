a {
  color: $primary;
}

// .cj-has-bg-COLOR
@each $name, $pair in $colors {
  $color: nth($pair, 1);
  $color-invert: nth($pair, 2);

  .cj-color-#{$name} {
    color: $color !important;
  }

  .cj-color-hover-#{$name} {
    a {
      &:hover {
        color: $color !important;
      }
    }
  }

  .cj-links-#{$name} {
    a {
      color: $color !important;

      &:hover {
        color: darken($color, 30%) !important;
      }
    }
  }

  .cj-bg-#{$name} {
    background-color: $color;
  }

  .cj-has-bg-#{$name} {

    color: $color-invert;

    a {
      //text-decoration: underline;
    }

    a:not(.cj-button):not(.cj-dropdown-item):not(.cj-tag),
    strong {
      color: $color-invert;
    }

    @include headings() {
      color: $color-invert;
    }

    .cj-title, .cj-label {
      color: $color-invert;
    }

    .cj-subtitle {
      color: rgba($color-invert, 0.9);

      a:not(.cj-button):not(.cj-dropdown-item):not(.cj-tag),
      strong {
        color: $color-invert;
      }
    }

    .cj-navbar-menu {
      @include respondto('sm', 'xs') {
        background-color: $color;
      }
    }

    .cj-navbar-item,
    .cj-navbar-link {
      color: rgba($color-invert, 0.7);
    }

    a.cj-navbar-item,
    .cj-navbar-link {
      &:hover,
      &.cj-is-active {
        background-color: darken($color, 5%);
        color: $color-invert;
      }
    }

    .cj-tabs {
      a {
        color: $color-invert;
        opacity: 0.9;

        &:hover {
          opacity: 1;
        }
      }

      li {
        &.cj-is-active a {
          opacity: 1;
        }
      }

      &.cj-is-boxed,
      &.cj-is-toggle {
        a {
          color: $color-invert;

          &:hover {
            background-color: rgba($scheme-invert, 0.1);
          }
        }

        li.cj-is-active a {
          &,
          &:hover {
            background-color: $color-invert;
            border-color: $color-invert;
            color: $color;
          }
        }
      }
    }

    // Modifiers
    &.cj-is-bold {
      $gradient-top-left: darken(saturate(adjust-hue($color, -10deg), 10%), 10%);
      $gradient-bottom-right: lighten(saturate(adjust-hue($color, 10deg), 5%), 5%);

      background-image: linear-gradient(141deg, $gradient-top-left 0%, $color 71%, $gradient-bottom-right 100%);

      @include mobile {
        .cj-navbar-menu {
          background-image: linear-gradient(141deg, $gradient-top-left 0%, $color 71%, $gradient-bottom-right 100%);
        }
      }
    }

    // inner divs
    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);

      .cj-color-#{$name} {
        color: $color !important;
      }

      .cj-color-hover-#{$name} {
        a {
          &:hover {
            color: $color !important;
          }
        }
      }

      .cj-links-#{$name} {
        a {
          color: $color !important;

          &:hover {
            color: darken($color, 30%) !important;
          }
        }
      }

      .cj-bg-#{$name} {
        background-color: $color;
      }

      .cj-has-bg-#{$name} {

        color: $color-invert;

        a {
          //text-decoration: underline;
        }

        a:not(.cj-button):not(.cj-dropdown-item):not(.cj-tag),
        strong {
          color: $color-invert;
        }

        @include headings() {
          color: $color-invert;
        }

        .cj-title, .cj-label {
          color: $color-invert;
        }

        .cj-subtitle {
          color: rgba($color-invert, 0.9);

          a:not(.cj-button):not(.cj-dropdown-item):not(.cj-tag),
          strong {
            color: $color-invert;
          }
        }

        .cj-navbar-menu {
          @include respondto('sm', 'xs') {
            background-color: $color;
          }
        }

        .cj-navbar-item,
        .cj-navbar-link {
          color: rgba($color-invert, 0.7);
        }

        a.cj-navbar-item,
        .cj-navbar-link {
          &:hover,
          &.cj-is-active {
            background-color: darken($color, 5%);
            color: $color-invert;
          }
        }

        .cj-tabs {
          a {
            color: $color-invert;
            opacity: 0.9;

            &:hover {
              opacity: 1;
            }
          }

          li {
            &.cj-is-active a {
              opacity: 1;
            }
          }

          &.cj-is-boxed,
          &.cj-is-toggle {
            a {
              color: $color-invert;

              &:hover {
                background-color: rgba($scheme-invert, 0.1);
              }
            }

            li.cj-is-active a {
              &,
              &:hover {
                background-color: $color-invert;
                border-color: $color-invert;
                color: $color;
              }
            }
          }
        }

        // Modifiers
        &.cj-is-bold {
          $gradient-top-left: darken(saturate(adjust-hue($color, -10deg), 10%), 10%);
          $gradient-bottom-right: lighten(saturate(adjust-hue($color, 10deg), 5%), 5%);

          background-image: linear-gradient(141deg, $gradient-top-left 0%, $color 71%, $gradient-bottom-right 100%);

          @include mobile {
            .cj-navbar-menu {
              background-image: linear-gradient(141deg, $gradient-top-left 0%, $color 71%, $gradient-bottom-right 100%);
            }
          }
        }
      }
    }


  }
}