$button-color: $text-strong !default;
$button-background-color: $scheme-main !default;
$button-family: false !default;

$button-border-color: $border !default;
$button-border-width: $control-border-width !default;

$button-padding-vertical: calc(0.5em - #{$button-border-width}) !default;
$button-padding-horizontal: 1em !default;

$button-hover-color: $link-hover !default;
$button-hover-border-color: $link-hover-border !default;

$button-focus-color: $link-focus !default;
$button-focus-border-color: $link-focus-border !default;
$button-focus-box-shadow-size: 0 0 0 0.125em !default;
$button-focus-box-shadow-color: rgba($link, 0.25) !default;

$button-active-color: $link-active !default;
$button-active-border-color: $link-active-border !default;

$button-text-color: $text !default;
$button-text-hover-background-color: $background !default;
$button-text-hover-color: $text-strong !default;

$button-disabled-background-color: $scheme-main !default;
$button-disabled-border-color: $border !default;
$button-disabled-shadow: none !default;
$button-disabled-opacity: 0.5 !default;

$button-static-color: $text-light !default;
$button-static-background-color: $scheme-main-ter !default;
$button-static-border-color: $border !default;

// The button sizes use mixins so they can be used at different breakpoints
@mixin button-small {
  border-radius: $radius-small;
  font-size: $size-small;
}

@mixin button-normal {
  font-size: $size-normal;
}

@mixin button-medium {
  font-size: $size-medium;
}

@mixin button-large {
  font-size: $size-large;
}

.cj-button {
  @extend %control;

  @extend %unselectable;

  background-color: $button-background-color;
  border-color: $button-border-color;
  border-width: $button-border-width;
  color: $button-color;
  cursor: pointer;

  @if $button-family {
    font-family: $button-family;
  }

  justify-content: center;
  padding-bottom: $button-padding-vertical;
  padding-left: $button-padding-horizontal;
  padding-right: $button-padding-horizontal;
  padding-top: $button-padding-vertical;
  text-align: center;
  white-space: nowrap;

  strong {
    color: inherit;
  }

  .cj-icon {
    &,
    &.cj-is-small,
    &.cj-is-medium,
    &.cj-is-large {
      height: 1.5em;
      width: 1.5em;
    }

    &:first-child:not(:last-child) {
      margin-left: calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width});
      margin-right: $button-padding-horizontal / 4;
    }

    &:last-child:not(:first-child) {
      margin-left: $button-padding-horizontal / 4;
      margin-right: calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width});
    }

    &:first-child:last-child {
      margin-left: calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width});
      margin-right: calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width});
    }
  }

  // States
  &:hover,
  &.cj-is-hovered {
    border-color: $button-hover-border-color;
    color: $button-hover-color;
  }

  &:focus,
  &.cj-is-focused {
    border-color: $button-focus-border-color;
    color: $button-focus-color;

    &:not(:active) {
      box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;
    }
  }

  &:active,
  &.cj-is-active {
    border-color: $button-active-border-color;
    color: $button-active-color;
  }

  // Colors
  &.cj-is-text {
    background-color: transparent;
    border-color: transparent;
    color: $button-text-color;
    text-decoration: underline;

    &:hover,
    &.cj-is-hovered,
    &:focus,
    &.cj-is-focused {
      background-color: $button-text-hover-background-color;
      color: $button-text-hover-color;
    }

    &:active,
    &.cj-is-active {
      background-color: darken($button-text-hover-background-color, 5%);
      color: $button-text-hover-color;
    }

    &[disabled],
    fieldset[disabled] & {
      background-color: transparent;
      border-color: transparent;
      box-shadow: none;
    }
  }

  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.cj-is-#{$name} {
      background-color: $color;
      border-color: transparent;
      color: $color-invert;

      &:hover,
      &.cj-is-hovered {
        background-color: darken($color, 2.5%);
        border-color: transparent;
        color: $color-invert;
      }

      &:focus,
      &.cj-is-focused {
        border-color: transparent;
        color: $color-invert;

        &:not(:active) {
          box-shadow: $button-focus-box-shadow-size rgba($color, 0.25);
        }
      }

      &:active,
      &.cj-is-active {
        background-color: darken($color, 5%);
        border-color: transparent;
        color: $color-invert;
      }

      &[disabled],
      fieldset[disabled] & {
        background-color: $color;
        border-color: transparent;
        box-shadow: none;
      }

      &.cj-is-inverted {
        background-color: $color-invert;
        color: $color;

        &:hover,
        &.cj-is-hovered {
          background-color: darken($color-invert, 5%);
        }

        &[disabled],
        fieldset[disabled] & {
          background-color: $color-invert;
          border-color: transparent;
          box-shadow: none;
          color: $color;
        }
      }

      &.cj-is-loading {
        &::after {
          border-color: transparent transparent $color-invert $color-invert !important;
        }
      }

      &.cj-is-outlined {
        background-color: transparent;
        border-color: $color;
        color: $color;

        &:hover,
        &.cj-is-hovered,
        &:focus,
        &.cj-is-focused {
          background-color: $color;
          border-color: $color;
          color: $color-invert;
        }

        &.cj-is-loading {
          &::after {
            border-color: transparent transparent $color $color !important;
          }

          &:hover,
          &.cj-is-hovered,
          &:focus,
          &.cj-is-focused {
            &::after {
              border-color: transparent transparent $color-invert $color-invert !important;
            }
          }
        }

        &[disabled],
        fieldset[disabled] & {
          background-color: transparent;
          border-color: $color;
          box-shadow: none;
          color: $color;
        }
      }

      &.cj-is-inverted.cj-is-outlined {
        background-color: transparent;
        border-color: $color-invert;
        color: $color-invert;

        &:hover,
        &.cj-is-hovered,
        &:focus,
        &.cj-is-focused {
          background-color: $color-invert;
          color: $color;
        }

        &.cj-is-loading {
          &:hover,
          &.cj-is-hovered,
          &:focus,
          &.cj-is-focused {
            &::after {
              border-color: transparent transparent $color $color !important;
            }
          }
        }

        &[disabled],
        fieldset[disabled] & {
          background-color: transparent;
          border-color: $color-invert;
          box-shadow: none;
          color: $color-invert;
        }
      }

      // If light and dark colors are provided
      @if length($pair) >= 4 {
        $color-light: nth($pair, 3);
        $color-dark: nth($pair, 4);

        &.cj-is-light {
          background-color: $color-light;
          color: $color-dark;

          &:hover,
          &.cj-is-hovered {
            background-color: darken($color-light, 2.5%);
            border-color: transparent;
            color: $color-dark;
          }

          &:active,
          &.cj-is-active {
            background-color: darken($color-light, 5%);
            border-color: transparent;
            color: $color-dark;
          }
        }
      }
    }
  }

  // Sizes
  &.cj-is-small {
    @include button-small;
  }

  &.cj-is-normal {
    @include button-normal;
  }

  &.cj-is-medium {
    @include button-medium;
  }

  &.cj-is-large {
    @include button-large;
  }

  // Modifiers
  &[disabled],
  fieldset[disabled] & {
    background-color: $button-disabled-background-color;
    border-color: $button-disabled-border-color;
    box-shadow: $button-disabled-shadow;
    opacity: $button-disabled-opacity;
  }

  &.cj-is-fullwidth {
    display: flex;
    width: 100%;
  }

  &.cj-is-loading {
    color: transparent !important;
    pointer-events: none;

    &::after {
      @extend %loader;

      @include center(1em);

      position: absolute !important;
    }
  }

  &.cj-is-static {
    background-color: $button-static-background-color;
    border-color: $button-static-border-color;
    color: $button-static-color;
    box-shadow: none;
    pointer-events: none;
  }

  &.cj-is-rounded {
    border-radius: $radius-rounded;
    padding-left: calc(#{$button-padding-horizontal} + 0.25em);
    padding-right: calc(#{$button-padding-horizontal} + 0.25em);
  }
}

.cj-buttons {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .cj-button {
    margin-bottom: 0.5rem;

    &:not(:last-child):not(.cj-is-fullwidth) {
      margin-right: 0.5rem;
    }
  }

  &:last-child {
    margin-bottom: -0.5rem;
  }

  &:not(:last-child) {
    margin-bottom: 1rem;
  }

  // Sizes
  &.cj-are-small {
    .cj-button:not(.cj-is-normal):not(.cj-is-medium):not(.cj-is-large) {
      @include button-small;
    }
  }

  &.cj-are-medium {
    .cj-button:not(.cj-is-small):not(.cj-is-normal):not(.cj-is-large) {
      @include button-medium;
    }
  }

  &.cj-are-large {
    .cj-button:not(.cj-is-small):not(.cj-is-normal):not(.cj-is-medium) {
      @include button-large;
    }
  }

  &.cj-has-addons {
    .cj-button {
      &:not(:first-child) {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
      }

      &:not(:last-child) {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        margin-right: -1px;
      }

      &:last-child {
        margin-right: 0;
      }

      &:hover,
      &.cj-is-hovered {
        z-index: 2;
      }

      &:focus,
      &.cj-is-focused,
      &:active,
      &.cj-is-active,
      &.cj-is-selected {
        z-index: 3;

        &:hover {
          z-index: 4;
        }
      }

      &.cj-is-expanded {
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }

  &.cj-is-centered {
    justify-content: center;

    &:not(.cj-has-addons) {
      .cj-button:not(.cj-is-fullwidth) {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
      }
    }
  }

  &.cj-is-right {
    justify-content: flex-end;

    &:not(.cj-has-addons) {
      .cj-button:not(.cj-is-fullwidth) {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
      }
    }
  }
}
